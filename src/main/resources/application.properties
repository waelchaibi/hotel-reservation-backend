# APPLICATION CONFIGURATION
# This is like your app's name tag and address
spring.application.name=hotel-reservation-backend
server.port=8081

# DATABASE CONFIGURATION
# These are like the address and password to your database house

# FOR DEVELOPMENT: Using H2 (toy database - no setup needed!)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# FOR PRODUCTION: MySQL Database (comment the H2 above and uncomment these)
# spring.datasource.url=jdbc:mysql://localhost:3306/hotel_reservation_db
# spring.datasource.username=your_username
# spring.datasource.password=your_password
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/HIBERNATE CONFIGURATION
# This tells the app how to create and manage database tables
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# For MySQL (use this dialect when switching to MySQL)
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# SECURITY CONFIGURATION
# This is like the secret password for creating user tickets (JWT tokens)
app.jwt.secret=mySecretKey12345678901234567890123456789012345678901234567890
app.jwt.expiration=86400000

# EMAIL CONFIGURATION
# This is like setting up your email account to send notifications
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-app-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# EXTERNAL API CONFIGURATION
# These are like phone numbers for other services
weather.api.key=your-openweather-api-key
weather.api.url=http://api.openweathermap.org/data/2.5/weather

# Payment Configuration
stripe.api.key=your-stripe-secret-key
stripe.public.key=your-stripe-public-key

# FILE UPLOAD CONFIGURATION
# This controls how big files users can upload (like hotel photos)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# LOGGING CONFIGURATION
# This controls what information gets written to log files (like a diary)
logging.level.com.hotelreservation=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Custom security credentials
spring.security.user.name=admin
spring.security.user.password=password123

# CORS CONFIGURATION (for frontend communication)
# This allows your frontend (Angular) to talk to your backend
app.cors.allowed-origins=http://localhost:4200